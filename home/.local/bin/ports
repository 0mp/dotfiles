#! /bin/sh -
#
# SPDX-License-Identifier: BSD-2-Clause-FreeBSD
#
# Copyright (c) 2020 Mateusz Piotrowski
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

set -eu

err() {
	local rc
	rc="$1"
	shift
	printf 'ERROR: %s\n' "$*" >&2
	exit "${rc}"
}

case ${1:-} in
new13)
	sudo poudriere jail -c -j "130a-$(date +%Y-%m-%d)" -a amd64 -v 13.0-CURRENT
	;;
commitnew)
	shift
	origin="${PWD#${PWD%/*/*}/}"
	cat << SVN_COMMIT | xclip -sel clipboard
New port: ${origin}: $(make -V COMMENT)

$(cat pkg-descr)
SVN_COMMIT
	svn commit ../Makefile .
	;;
test)
	shift
	jail="$1"
	shift
	if args=$(getopt io: $*)
	then
		set -- $args
		interactive=no
		origin="${PWD#${PWD%/*/*}/}"
		while :
		do
			case $1 in
			-i)
				interactive=yes
				shift
				;;
			-o)
				shift
				origin="${1}"
				shift
				;;
			--)
				break
				;;
			esac
		done
	fi

	if ports_tree="$(poudriere ports -lq | awk '/default/{print $5}')"
	then :; else
		err "$?" "Could not get the default poudriere ports tree"
	fi
	port_path="${ports_tree}/${origin}"
	if test_dependencies="$(make -C "${port_path}" test-depends-list | awk -F / '{printf "%s/%s ", $(NF - 1), $NF}')"
	then :; else
		err "$?" "Could not get test dependencies"
	fi

	if [ "${test_dependencies}" != "" ]
	then
		sudo poudriere bulk -j "${jail}" ${test_dependencies}
	fi
	if [ "$interactive" = "yes" ]
	then
		sudo poudriere testport -j "${jail}" -o "${origin}" -I
		printf '%s\n' "cd /usr/ports/${origin}" "make test" | \
			sudo jexec "${jail}-default-n" env -i TERM="$TERM" /usr/bin/login -fp root
		sudo jexec "${jail}-default-n" env -i TERM="$TERM" /usr/bin/login -fp root
		sudo poudriere jail -k -j "${jail}"
	else
		printf '%s\n' "cd /usr/ports/${origin}" "make test" |
			sudo poudriere testport -j "${jail}" -o "${origin}" -i
	fi
	;;
*)
	_b=$(printf "\033[1m")
	_0=$(printf "\033[0m")
	_u=$(printf "\033[4m")
	cat <<HELP
Usage: ${_b}ports${_0} [${_u}command${_0} [${_u}args${_0} ...]]
Commands:
	${_b}commitnew${_0}
	${_b}new13${_0}
	${_b}test${_0} ${_u}jail${_0} [${_u}origin${_0}]
HELP
	;;
esac
