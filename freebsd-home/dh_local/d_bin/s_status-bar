#! /bin/sh -

reload() {
	exec "$0"
}

trap reload USR1

batteries_status() {
	local _num_of_batteries
	local _battery

	if [ -f ~/.cache/battery-alert-off ]; then
		printf -- '! '
	fi

	_num_of_batteries="$(sysctl -n hw.acpi.battery.units)"

	if [ -z "${_num_of_batteries}" ]
	then
		return 0
	fi

	for _battery in $( seq 0 "$(( _num_of_batteries - 1 ))" )
	do
		if ! acpiconf -i "$_battery" | awk '
			BEGIN {
				recognized = 0
			}
			/Remaining capacity*/ {
				printf "%s", $3
				recognized = 1
			}
			/State:[[:space:]]+charging/ {
				printf "+"
				recognized = 1
			}
			/Remaining time:[[:space:]]+.*:.*/ {
				printf " (%s)", $3
				recognized = 1
			}
			END {
				exit recognized == 0
			}
			'
		then
			printf '%s' '?%'
		fi
		printf %s ' | '
	done
}

network_interface() {
	local _ssid _ip _ifconfig _active_if

	_ifconfig="$(ifconfig)"
	if printf '%s\n' "$_ifconfig" | grep -q "^lagg0"; then
		# Get the active interface.
		_active_if=$(printf '%s\n' "$_ifconfig" | awk '/laggport:.*ACTIVE/ { print $2 }')
		# Try to obtain the IP address associated with the lagg device.
		_ip="$(netstat -in4 -I lagg0 | awk 'NR > 1{print $4}')"
		# If there is no active interface yet, change the status bar.
		if [ "$_active_if" = "" ]; then
			printf '%s\n' lagg
		elif expr "X$_active_if" : "Xwlan.*" >/dev/null; then
			_ssid=$(wpa_cli -i "$_active_if" status | grep "^ssid" | cut -c 6-)
			printf '%s %s %s\n' "$_active_if" "$_ssid" "$_ip"
		else
			printf '%s %s\n' "$_active_if" "$_ip"
		fi
	else
		_active_if="wlan0"
		_ip="$(ifconfig "$_active_if" | awk '/\tinet /{print $2}')"
		_ssid="$(ifconfig "$_active_if" | awk '/\tssid /{print $2}')"
		printf -- '%s%s%s' "${_ssid#\"%\":-}" "${_ssid:+ }" "${_ip:-}"
	fi
	netstat -h -I "$_active_if" -q 1 -w 1 | awk 'NR == 3 {
		printf " %5s↓ %5s↑", $4, $7
	}'

	printf -- ' | '
}

mixer_status() {
	# Mixer
	if mixer -S pcm | grep -q '0:0'; then
		printf '%s' 'M '
	fi
	mixer -S vol | cut -d : -f 3
	printf ' | '
}

brightness_status() {
	[ -f ~/.cache/eyes-alert-off ] && printf -- '!'
	sysctl -n hw.acpi.video.lcd0.brightness
	if [ -e ~/.cache/sctd.log ]; then
		printf ' '
		awk 'END {print $NF}' ~/.cache/sctd.log
	fi
	printf ' | '
}

network_status() {
	if ! drill >/dev/null 2>&1
	then
		printf -- 'X '
	fi
	network_interface
}

time_status() {
	date +'%A, %Y-%m-%d (%B) %H:%M '
}

status_bar() {
	if [ -f ~/.cache/motd ]; then
		cat ~/.cache/motd
	fi
	printf ' '
	mixer_status
	brightness_status
	batteries_status
	network_status
	time_status
}

while xsetroot -name "$(status_bar | tr -d '\n')"
do
    sleep 2
done
