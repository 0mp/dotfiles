#! /bin/sh -
#
# SPDX-License-Identifier: BSD-2-Clause
#
# Copyright (c) 2020-2021 Mateusz Piotrowski
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

set -eu

err() {
	local rc
	rc="$1"
	shift
	printf 'ERROR: %s\n' "$*" >&2
	exit "${rc}"
}

case ${1:-} in
clippy)
	shift
	echo Makefile | entr -c -s "portclippy Makefile | awk -v on=0 '/^[+-]/{on=1} on'"
	;;
depends)
	shift
	pkg rquery -ix "%n>=0:%o" "$1" | awk '
		/^py[0-9][0-9]-/ {
			sub("^py..-", "\${PYTHON_PKGNAMEPREFIX}")
			printf "%s@${PY_FLAVOR}\n", $0
			next
		}
		{ print }
	'
	;;
test)
	shift
	jail="$1"
	shift
	if args=$(getopt Bio: $*)
	then
		set -- $args
		binary_packages=yes
		interactive=no
		origin="${PWD#${PWD%/*/*}/}"
		while :
		do
			case $1 in
			-B)
				binary_packages=no
				shift
				;;
			-i)
				interactive=yes
				shift
				;;
			-o)
				shift
				origin="${1}"
				shift
				;;
			--)
				break
				;;
			esac
		done
	fi

	if ports_tree="$(poudriere ports -lq | awk '/default/{print $5}')"
	then :; else
		err "$?" "Could not get the default poudriere ports tree"
	fi
	port_path="${ports_tree}/${origin}"
	if [ ! -d "$port_path" ]; then
		err 1 "${port_path}: Invalid port path"
	fi
	if test_dependencies="$(make -C "${port_path}" test-depends-list | awk -F / '{printf "%s/%s ", $(NF - 1), $NF}')"
	then :; else
		err "$?" "Could not get test dependencies"
	fi
	if all_dependencies="$(make -C "${port_path}" all-depends-list | awk -F / '{printf "%s/%s ", $(NF - 1), $NF}')"
	then :; else
		err "$?" "Could not get all non-test dependencies"
	fi

	if [ "${test_dependencies}${all_dependencies}" != "" ]
	then
		if [ "$binary_packages" = yes ]; then
			sudo poudriere bulk -b latest -j "${jail}" ${test_dependencies} ${all_dependencies}
		else
			sudo poudriere bulk -j "${jail}" ${test_dependencies} ${all_dependencies}
		fi

	fi
	if [ "$interactive" = "yes" ]
	then
		sudo poudriere testport -j "${jail}" -o "${origin}" -I
		printf '%s\n' "cd /usr/ports/${origin}" "make test" | \
			sudo jexec "${jail}-default-n" env -i TERM="$TERM" /usr/bin/login -fp root
		sudo jexec "${jail}-default-n" env -i TERM="$TERM" /usr/bin/login -fp root
		sudo poudriere jail -k -j "${jail}"
	else
		printf '%s\n' "cd /usr/ports/${origin}" "make test" |
			sudo poudriere testport -j "${jail}" -o "${origin}" -i
	fi
	;;
*)
	_b=$(printf "\033[1m")
	_0=$(printf "\033[0m")
	_u=$(printf "\033[4m")
	cat <<HELP
Usage: ${_b}ports${_0} [${_u}command${_0} [${_u}args${_0} ...]]
Commands:
	${_b}clippy${_0}
	${_b}depends${_0} ${_u}pattern${_0}
	${_b}test${_0} ${_u}jail${_0} [${_b}-B${_0}] [${_b}-i${_0}] [${_b}-o${_0} ${_u}origin${_0}]
HELP
	;;
esac
