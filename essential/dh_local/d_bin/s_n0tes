#! /bin/sh -
#
# Copyright (c) 2021 Mateusz Piotrowski <0mp@FreeBSD.org>
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

set -eu

die() {
	_rc="$1"
	shift
	printf "%s\n" "$*" >&2
	exit "$_rc"
}

require() {
	if ! command -v "$1" >/dev/null; then
		die 1 "ERROR: Command not found: $1"
	fi
}

main() {
	_shall_copy_to_clipboard="no"

	require fzf

	_name="${1:-}"
	if [ "$_name" = "" ]; then
		_name=$(printf '%s\n' $snippets | fzf)
	elif ! LC_ALL=C expr "X$_name" : "X[[:alnum:]]*$" >/dev/null; then
		die 1 "ERROR: Invalid snippet name: $_name"
	fi

	get_snippet_${_name}
	if command -v xclip >/dev/null; then
		get_snippet_${_name} | xclip -in -sel clipboard
	fi
}

#
# Snippets
#
snippets=""

snippets="${snippets}${snippets:+ }sh_getopts"
get_snippet_sh_getopts() {
	cat <<'SNIPPET'
OPTIND=1
while getopts ab: opt; do
	case "$opt" in
	a)
		echo "-a"
		;;
	b)
		echo "-b $OPTARG"
		;;
	?)
		exit 1
		;;
	esac
done
if [ "$OPTIND" -ne 0 ]; then
	shift "$(( OPTIND - 1 ))"
fi
SNIPPET
}

snippets="${snippets}${snippets:+ }sh_require"
get_snippet_sh_require() {
	cat <<'SNIPPET'
require() {
	if ! command -v "$1" >/dev/null; then
		die 1 "ERROR: Command not found: $1"
	fi
}
SNIPPET
}

snippets="${snippets}${snippets:+ }sh_modeline"
get_snippet_sh_modeline() {
	cat <<'SNIPPET'
# vim: filetype=sh softtabstop=4 shiftwidth=4 tabstop=4 expandtab
SNIPPET
}

#
# Body
#

main "$@"
