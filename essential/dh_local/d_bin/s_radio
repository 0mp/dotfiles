#! /bin/sh -
#
# Listen to Internet radios.

set -eu

usage() {
    printf '%s\n' "Usage: $(basename -- "$0") [<#>|<name>]"
    echo
    printf '%10s\t%s\t%s\t%s\n' NAME '#' PREFIX URL
    printf '%10s\t%s\t%s\t%s\n' $radios
} >&2

radios="$(cat <<RADIOS | awk '{ $1 = $1 " " (NR - 1); print }'
anon        a   http://anonradio.net:8000/anonradio
dfm         d   https://dfm.nu/DFM_RTV_INT_1.m3u
kampus      ka  http://193.0.98.66:8005/listen.pls
koollondon  ko  http://uk1-pn.mixstream.net/8698.m3u
luz         l   http://radioluz.pwr.edu.pl:8000/luzlofi.ogg
soma        s   http://somafm.com/m3u/defcon256.m3u
RADIOS
)"

players="cvlc"

for p in $players
do
    if command -v -- "$p" >/dev/null; then
        player="$p"
        break
    fi
done

if [ "$#" -ge 1 ]; then
    arg="$1"
else
    arg="$(printf '%s\n' "$radios" | awk '
        /./ {
            a[NR]=$2
            count++
        }
        END {
            for (n in a) {
                srand()
                idx = rand() * count
                sub("[.].*", "", idx)
                print idx
            }
        }
    ')"
fi

printf "%s\n" "$radios" "END" | while read -r name num prefix url; do
    [ "$name" = "" ] && continue # Skip empty lines.
    if [ "$name" = "END" ]; then
        printf 'ERROR: "%s" %s\n' "$arg" 'does not match any known radio stations.' 1>&2
        usage
        exit 1
    fi
    if expr -- "$arg" : "$num" >/dev/null || expr -- "$arg" : "$prefix.*" >/dev/null; then
        echo "$name"
        "$player" "$url"
        break
    fi
done

# vim: filetype=sh softtabstop=4 shiftwidth=4 tabstop=4 expandtab
